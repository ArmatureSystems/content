elasticcommonfields: {}
id: PlainText Feed - Test
version: -1
name: PlainText Feed - Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 828f2afa-b2aa-4593-8169-d8bc7342cc1e
    type: start
    task:
      id: 828f2afa-b2aa-4593-8169-d8bc7342cc1e
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 266080cd-7b6b-4db9-8d0d-355ee8f2bf6f
    type: regular
    task:
      id: 266080cd-7b6b-4db9-8d0d-355ee8f2bf6f
      version: -1
      name: Get Indicators
      description: Gets indicators from the feed.
      script: Plain Text Feed|||plaintext-get-indicators
      type: regular
      iscommand: true
      brand: Plain Text Feed
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      extend-context:
        simple: PlainTextFeed.value=value::PlainTextFeed.type=type
      indicator_type:
        simple: CIDR
      limit:
        simple: "10"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 7a7918fc-dba0-4880-8e2f-a34c68ad823e
    type: condition
    task:
      id: 7a7918fc-dba0-4880-8e2f-a34c68ad823e
      version: -1
      name: Assert Output
      description: Asserts output.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "5"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: PlainTextFeed
                accessor: value
            iscontext: true
      - - operator: containsGeneral
          left:
            value:
              complex:
                root: PlainTextFeed
                accessor: type
            iscontext: true
          right:
            value:
              simple: CIDR
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: 6d5521b3-161f-4934-8815-a2be2584298c
    type: title
    task:
      id: 6d5521b3-161f-4934-8815-a2be2584298c
      version: -1
      name: Done
      description: Done
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 940
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: 5cfd0680-a0dd-46fa-8a05-df358767362e
    type: regular
    task:
      id: 5cfd0680-a0dd-46fa-8a05-df358767362e
      version: -1
      name: Delete Context
      description: Delete field from context.
      script: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: 2a683fa3-93c5-4c7c-8e52-05f47e6d303b
    type: regular
    task:
      id: 2a683fa3-93c5-4c7c-8e52-05f47e6d303b
      version: -1
      name: Untitled Task
      description: Check if a docker image is available for performing docker pull.
        Script simulates the docker pull flow but doesn't actually pull the image.
        Returns an entry with 'ok' if all is good otherwise will return an error.
      scriptName: CheckDockerImageAvailable
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      input:
        simple: test
      trust_any_certificate:
        simple: "no"
      use_system_proxy: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 750
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 955,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
